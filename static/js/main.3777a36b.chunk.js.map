{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/search/search.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","user","className","src","id","alt","name","email","CardList","monsters","map","monster","Search","placeholder","handleChange","type","onChange","App","handleSearch","e","setState","searchField","target","value","toggleDarkMode","darkMode","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","htmlFor","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAEaA,EAAK,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OAClB,sBAAKC,UAAU,OAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAAKG,GAA/B,0BAA2DC,IAAI,GAAGH,UAAU,gBAChF,oBAAIA,UAAU,cAAd,SAA6BD,EAAKK,OAClC,mBAAGJ,UAAU,gBAAb,SAA8BD,EAAKM,YCFzBC,EAAS,SAAC,GAAe,IAAdC,EAAa,EAAbA,SACrB,OACI,qBAAKP,UAAU,YAAf,SAEJO,EAASC,KAAI,SAAAC,GAAO,OAClB,cAAC,EAAD,CAAuBV,KAAMU,GAAlBA,EAAQP,UCPZQ,G,MAAO,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aAC9B,OACI,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,EAAcZ,UAAU,aCApEe,E,kDACnB,aAAe,IAAD,8BACZ,gBAeFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjB1B,EAmBdC,eAAiB,WACf,EAAKJ,SAAS,CAACK,UAAW,EAAKC,MAAMD,YAlBvC,EAAKC,MAAQ,CACXjB,SAAU,GACVY,YAAa,GACbI,UAAS,GALG,E,qDASd,WAAqB,IAAD,OAClBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAAEX,SAAUsB,S,oBAW5C,WAAU,IAAD,EACqCC,KAAKN,MAAzCjB,EADD,EACCA,SAAUY,EADX,EACWA,YAAaI,EADxB,EACwBA,SACzBQ,EAAmBxB,EAASyB,QAAO,SAAAvB,GAAO,OAAIA,EAAQL,KAAK6B,cAAcC,SAASf,EAAYc,kBACpG,OAEE,sBAAKjC,UAAS,cAASuB,EAAW,YAAc,IAAhD,UACE,sBAAKvB,UAAU,SAAf,UACA,gCACJ,uBAAOa,KAAK,WAAWb,UAAU,WAAWE,GAAG,WAAWY,SAAUgB,KAAKR,iBAC3E,wBAAOa,QAAQ,WAAWnC,UAAU,QAApC,UACE,mBAAGA,UAAU,eACb,mBAAGA,UAAU,gBACb,qBAAKA,UAAU,eAIX,oBAAIA,UAAU,UAAd,8BACA,sBAAMA,UAAU,mBAAmBoC,QAASN,KAAKR,oBAEjD,cAAC,EAAD,CAAQX,YAAY,SAASC,aAAckB,KAAKd,eAChD,cAAC,EAAD,CAAUT,SAAUwB,W,GA5CKM,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3777a36b.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.scss'\nexport const Card=({user})=>(\n<div className=\"card\">\n<img src={`https://robohash.org/${user.id}?set=set1&size=160x160`} alt=\"\" className=\"card__image\"/>\n    <h1 className=\"card__title\">{user.name}</h1>\n    <p className=\"card__contact\">{user.email}</p>\n    </div>\n) \n","import React from 'react'\nimport './card-list.styles.scss'\nimport {Card} from '../card/card.component'\n\nexport  const CardList=({monsters})=> {\n    return (\n        <div className=\"card-list\">\n              {\n    monsters.map(monster => (\n      <Card key={monster.id} user={monster}/>\n    ))\n    }\n        </div>\n    )\n}\n","import React from 'react'\nimport './search.styles.scss'\nexport const Search=({placeholder,handleChange})=> {\n    return (\n        <input type=\"search\" placeholder={placeholder} onChange={handleChange} className=\"search\"/>\n\n    )\n}\n","import React, { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { Search } from './components/search/search.component';\nexport default class App extends Component {\n  constructor() {\n    super();\n  this.state = {\n    monsters: [],\n    searchField: '',\n    darkMode:false\n  }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {this.setState({ monsters: users })})\n    \n  }\n\n  handleSearch = (e) =>{\n    this.setState({ searchField: e.target.value })\n  }\n  toggleDarkMode = () => {\n    this.setState({darkMode: !this.state.darkMode})\n  }\n\n  render() {\n    const { monsters, searchField, darkMode } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n     \n      <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"header\">\n        <div>\n    <input type=\"checkbox\" className=\"checkbox\" id=\"checkbox\" onChange={this.toggleDarkMode}/>\n  <label htmlFor=\"checkbox\" className=\"label\">\n    <i className='fas fa-sun'></i>\n    <i className=\"fas fa-moon\"></i>\n    <div className='ball'>\n</div>\n  </label>\n  </div>\n        <h1 className=\"heading\">Monsters Rolodex</h1>\n        <span className=\"dark-mode-toggle\" onClick={this.toggleDarkMode}></span>\n        </div>\n        <Search placeholder=\"search\" handleChange={this.handleSearch} />\n        <CardList monsters={filteredMonsters}/>\n    </div>\n    )\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}